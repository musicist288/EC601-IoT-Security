---
layout: single
slug: iot-security
title:  "Securing the Internet of Things (IoT)"
author: Joseph Rossi
date:   2021-09-19 12:00:00 -0400
excerpt: ""
show_date: True
---

## The Rise of IoT

Over the past decade, the Internet of Things (IoT) has gone from being a start-up buzzword into becoming an integral part of everyday life. The ubiquity of smartphones and relatively low cost of cloud infrastructure have significantly lowered the bar to entry for new and existing businesses to deliver so-called "smart" devices into the hands of consumers. Many of these products integrate with cloud services and barely require any software engineering to get up and running. Don't have a free hand to start the coffee machine while making breakfast? "Alexa, turn on my coffee machine". Reading on the couch while it's getting dark outside? "Alexa, turn on the living-room lamp." Cars, toasters, refrigerators...they're all (not so slowly) joining the IoT.

While IoT devices continue to overtake the home, industrial systems are incorporating IoT systems into their operations to increase manufacturing efficiency, enable smarter facilities management {% cite azure:iot %}, and to provide scalable cost-efficient access to once costly services. In medicine, there are products that allow diabetes patients to monitor and manage their own insulin{% cite tandem:diabetes-care %} without incurring the cost of frequent doctor visits. In civil infrastructure management, IoT solutions are starting to enable smart stormwater management{% cite opti:website %}. The IDC predicts that by 2025 that 55% of all data will be generated by the IoT, 43% of AI tasks will run their computation on edge devices, and 70% of enterprises will have incorporated IoT edge computing into their operations by 2023{% cite idc:iot-preditions:2018 %}.

With IoT rapidly integrating into every aspect of business and society, it is becoming more essential than ever that these devices are secure from cyberattacks. Nowadays, it is rare to go a week without hearing of a new vulnerability, data leak, or ransomware attack that compromises the data of hundreds or thousands of people. While the risk are already uncomfortable with the stakes of personal data being exposed, the risks become unacceptable when a compromised insulin pump can kill you[^insulin-pump-note], or foreign hackers are looking to gain control of a country's power grid{% cite wired:russian-hackers-power-grid %}. The extreme hazards from cyberattacks escalate from financial hardships and identity theft to hazards that could inflict instant physical harm on individuals or communities. Developing and deploy safe and secure systems becomes of paramount importance.

## Why isn't it secure by default?

Security on the Internet has historically been an afterthought. The original technology and protocols powering the Internet (ARPANET, UDP, TCP, HTTP, etc) were not developed with security in mind. As more and more people put their data personal and financial data online in the 1990s and 2000s, the need for secure communication started taking center stage. Since security was developed as an add-on, businesses had to opt into security, which slowed down its adoption. It's also tricky to do correctly, even for simple web services, and Moore's law quickly rendered once statistically bulletproof cryptographic algorithms easily breakable {% cite leurentpeyrin %}. Even today, simple web services attempting to follow modern best practices suffer from security breaches, DDoS, and ransomware.

IoT system have more layers than traditional web services{% cite iotsense:iotlayers %}, and the challenge of running a secure system is compounded by these layers.  The layers include everything from the small edge devices up through the applications running in the cloud that constantly analyzing and making predictions, and potentially physically controlling aspects of the system. Security vulnerabilities exist and can be exploited in any layer and often exist in many of them in real-world systems. Adding more complexity, each tier uses different types of computing resources and different connectivity technology, so there are different protocols to exploit at every layer. Edge devices may communicate over Bluetooth LE, Wi-Fi (which itself has dozens of security protocols), Zigbee, etc, while more application servers are set up in the cloud, sharing hardware with hundreds of other companies. Securing every layer in these systems becomes a daunting challenge.

## Ok, security is important and tricky to get right. How do we do it?

Research has been primary driver for the advancement of security on the Internet. Perhaps the most important aspect of security culture is the practice of open publication of cryptographic protocols, security architectures, and implementations of security. After such standards are published, other researchers try to break them! So when organizations like the NSA develop and publish cryptography algorithms like SHA1, the research community can poke at it to find weaknesses that malicious actors could exploit. This is not only valuable feedback to the designers, but also alerts industry professionals to move away from these former best practices{% cite leurentpeyrin %}.

While many researchers (and the media) focus finding vulnerabilities in algorithms and protocols, others focus on defining practices that IoT vendors and system designers could adopt for their own networks. For example, Bonetto et al.{% cite bonetto:al %} proposed an architecture that details the different layer of IoT applications and specifically dives into each one, incorporating details such as how security keys are managed, how new edge devices securely join a network, and where to draw the boundaries between different parts of the network to minimize the attack surface. They focus primarily the protocols used the different application layers, but also factor in the resource constrained nature edge devices by introducing a gateway between the "constrained" (i.e. isolated) and "unconstrained" networks.

With the rise of IoT, the culture of security testing has evolved to studying and probing software and hardware vulnerabilities due to their design or implementation. With the proliferation of cheap microprocessors making there was into every electronic device, vulnerabilities in standard protocol implementation, especially in vendor provided software that is trusted to be secure, could leave hundreds or thousands of devices vulnerable to exploit.  Researchers in Singapore recently found a variety of vulnerability in the Bluetooth stacks of multiple SoCs. Garbelini et al. showed that with cheap commodity hardware, an attacker can exploit vulnerabilities in these chipsets to render the device non-functional{% cite garbelinial %}. Remember, these chips could be in devices preventing your city's streets from flooding when it rains or controling your does medication. Crashing these devices could prevent them from functioning properly when they're needed most.

## Getting Involved

In recent years the Bluetooth family of protocols (Bluetooth Classic and BLE) has caught the eye of many researchers. As the "things" get smaller they necessarily need to use less power, and industry is turning to low energy protocols like Bluetooth. Unlike it's Internet predicessors, Bluetooth was designed with security in mind from the beginning {% cite bluesec1.0 %}. The security specification is quite comprehensive, but it's just a specification. Every vendor is on their own to implement to the standard in their chips, which leaves a lot of room for non-compliance and implementation flaws that leave these chips and any products that use them vulnerable to attacks. As researchers uncover these flaws, they are openly releasing the tools they develop to perform the attacks. These tools not only provide an easier starting point for future research, but also serve as tools for vendors to test their security patches or discover vulnerabilities in future version of their chips.

In 2019, the Secure Mobile Networking (SEEMOO) Lab  published the framework InternalBlue. {% cite ClassenJiska2019IJDB %} It appears to be the first of its kind, open-source framework turns off-the-shelf Bluetooth devices into sniffers capable of penetration testing. Using Internal Blue, the team at SEEMOO was able to reverse engineer Apple's "MagicPairing" protocol and analyze potential flaws in its design.{% HeinzeDennis2020 %} The setup was a bit cumbersome, but it's fairly easy to get running on popular devices running macOS or a Raspberry Pi and test out some example exploits it provides.

Inspired by the research using InternalBlue, Garbelini et al. went in a similar direction and reverse engineered the ESP32 Bluetooth stack, to turn a $10 development kit into an active Bluetooth sniffer capable of connected to and probing Bluetooth vulnerabilities in puppet devices. While the exploits are still being kept secret until vendors can patch their systems, the firmware for the ESP32 is publically available and was easy to set up in less than 30 minutes {% cite garbelinial %}.


## Citations

{% bibliography %}

[^insulin-pump-note]: This example in no way reflects that the referenced Tandem product poses any such risk. It's simply to illustrate the risk of insecure IoT medical products. According to the website, t:slim X2 Insulin Pump is being developed in accordance with FDA guidelines.


